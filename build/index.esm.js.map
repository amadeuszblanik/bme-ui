{"version":3,"file":"index.esm.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/styled-reset/lib/esm/index.js","../src/Components/GlobalStyles/GlobalStyles.tsx","../src/Components/Text/Text.variants.ts","../src/Components/Text/Text.tsx","../src/Utils/sizeToPx.ts","../src/Utils/renderLabel.ts","../src/Utils/isEmpty.ts","../src/Utils/isRealNumber.ts","../src/Mixins/spacing.ts","../src/Theme/Theme.ts","../src/Mixins/textColour.ts","../src/Components/Box/Box.variants.ts","../src/Mixins/makeFlex.ts","../src/Mixins/hexToRGBA.ts","../src/Mixins/transition.ts","../src/Mixins/clearButtonStyles.ts","../src/Components/Box/Box.tsx","../src/Components/Button/Button.tsx","../src/Components/Header/Header.variants.ts","../src/Components/Header/Header.tsx","../src/Hooks/useIntersection.ts","../src/Components/Image/Image.tsx","../src/Components/Card/Card.tsx","../src/Components/Badge/Badge.tsx","../node_modules/styled-components-breakpoint/dist/esm/core.js","../node_modules/styled-components-breakpoint/dist/esm/index.js","../node_modules/styled-components-grid/dist/esm/mixins/grid.js","../node_modules/styled-components-grid/dist/esm/mixins/gridUnit.js","../node_modules/react-create-component-from-tag-prop/dist/index.js","../node_modules/styled-components-grid/dist/esm/components/GridUnit.js","../node_modules/styled-components-grid/dist/esm/components/Grid.js","../node_modules/styled-components-grid/dist/esm/index.js","../src/Components/Grid/Grid.tsx","../src/Components/Topbar/Topbar.Brand.tsx","../src/Components/Topbar/Topbar.Content.tsx","../src/Components/Topbar/Topbar.styled.tsx","../src/Components/Topbar/Topbar.tsx","../src/Components/Nav/Nav.tsx","../src/Components/Form/TextField/TextField.styled.tsx","../src/Components/Form/TextField/TextField.tsx","../src/Components/Form/Select/Select.styled.tsx","../src/Components/Form/Select/Select.tsx","../src/Components/Form/Switch/Switch.styled.tsx","../src/Components/Form/Switch/Switch.tsx","../src/Components/Form/Label/Label.tsx","../src/Components/Form/Form.tsx","../src/Components/List/List.tsx","../src/Components/Switch/Switch.styled.tsx","../src/Components/Switch/Switch.tsx","../src/Components/Icon/bme-icons.eot","../src/Components/Icon/bme-icons.woff","../src/Components/Icon/bme-icons.woff2","../src/Components/Icon/Icon.styled.tsx","../src/Components/Icon/Icon.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport { css, createGlobalStyle } from 'styled-components';\n// prettier-ignore\nexport var reset = css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n/* http://meyerweb.com/eric/tools/css/reset/\\n   v4.0 | 20180602\\n   License: none (public domain)\\n*/\\n\\nhtml, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed,\\nfigure, figcaption, footer, header, hgroup,\\nmain, menu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 100%;\\n  font: inherit;\\n  vertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle, aside, details, figcaption, figure,\\nfooter, header, hgroup, main, menu, nav, section {\\n  display: block;\\n}\\n/* HTML5 hidden-attribute fix for newer browsers */\\n*[hidden] {\\n    display: none;\\n}\\nbody {\\n  line-height: 1;\\n}\\nol, ul {\\n  list-style: none;\\n}\\nblockquote, q {\\n  quotes: none;\\n}\\nblockquote:before, blockquote:after,\\nq:before, q:after {\\n  content: '';\\n  content: none;\\n}\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n\"], [\"\\n/* http://meyerweb.com/eric/tools/css/reset/\\n   v4.0 | 20180602\\n   License: none (public domain)\\n*/\\n\\nhtml, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed,\\nfigure, figcaption, footer, header, hgroup,\\nmain, menu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 100%;\\n  font: inherit;\\n  vertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle, aside, details, figcaption, figure,\\nfooter, header, hgroup, main, menu, nav, section {\\n  display: block;\\n}\\n/* HTML5 hidden-attribute fix for newer browsers */\\n*[hidden] {\\n    display: none;\\n}\\nbody {\\n  line-height: 1;\\n}\\nol, ul {\\n  list-style: none;\\n}\\nblockquote, q {\\n  quotes: none;\\n}\\nblockquote:before, blockquote:after,\\nq:before, q:after {\\n  content: '';\\n  content: none;\\n}\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n\"])));\nexport var Reset = createGlobalStyle(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\", \"\"], [\"\", \"\"])), reset);\nexport default reset;\nvar templateObject_1, templateObject_2;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyles;\n","import { TextFontWeights, TextSizes } from './Text.types';\n\nconst TextFontSize: { [key in TextSizes]: number } = {\n    xxl: 42,\n    xl: 32,\n    l: 24,\n    m: 18,\n    s: 16,\n    xs: 14,\n    xxs: 12,\n};\n\nconst TextFontWeight: { [key in TextFontWeights]: number } = {\n    bold: 500,\n    regular: 400,\n    light: 300,\n};\n\nexport { TextFontSize, TextFontWeight };\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { TextComponentProps } from './Text.types';\nimport { TextFontSize, TextFontWeight } from './Text.variants';\n\nconst StyledText = styled.p<TextComponentProps>`\n    color: ${({ variant, theme }) => (variant ? theme.bme.palette[variant] : 'var(--bme-colour-text)')};\n    font-size: ${({ size }) => TextFontSize[size]}px;\n    font-family: ${({ theme, fontFamily }) => theme.bme.fonts[fontFamily]};\n    font-weight: ${({ weight }) => TextFontWeight[weight]};\n    text-align: ${({ align }) => align};\n    ${({ italic }) => (italic ? 'font-style: italic;' : '')}\n`;\n\nconst Text: React.FunctionComponent<TextComponentProps> = ({ children, ...args }) => (\n    <StyledText data-testid=\"text-component\" {...args}>\n        {children}\n    </StyledText>\n);\n\nText.defaultProps = {\n    size: 'm',\n    fontFamily: 'sansSerif',\n    weight: 'regular',\n    align: 'left',\n};\n\nexport default Text;\n","import { Sizes } from '../Theme/Theme';\n\nconst SIZES_IN_PX: { [key in Sizes]: number } = {\n    xxl: 42,\n    xl: 32,\n    l: 24,\n    m: 16,\n    s: 8,\n    xs: 4,\n    xxs: 2,\n};\n\nconst sizeToPx = (size: Sizes): number => SIZES_IN_PX[size];\n\nexport default sizeToPx;\n","const renderLabel = (content: string, required: boolean): string => content + (required ? '*' : '');\n\nexport default renderLabel;\n","const isEmpty = (value: any[] | string): boolean => (value ? value.length <= 0 : true);\n\nexport default isEmpty;\n","const isRealNumber = (value: number): boolean => (typeof value === 'number' ? !isNaN(value) : false);\n\nexport default isRealNumber;\n","import { Sizes } from '../Theme/Theme';\nimport { sizeToPx } from '../Utils';\n\ninterface Sizing {\n    x?:\n        | Sizes\n        | {\n              left?: Sizes;\n              right?: Sizes;\n          };\n    y?:\n        | Sizes\n        | {\n              top?: Sizes;\n              bottom?: Sizes;\n          };\n}\n\nexport type SpacingSize = Sizes | Sizing;\ntype Type = 'padding' | 'margin';\n\nconst spacing = (type: Type, size: SpacingSize): string => {\n    switch (typeof size) {\n        case 'object': {\n            const response = [];\n            const { x, y } = size;\n\n            switch (typeof x) {\n                case 'object': {\n                    if (x.left) {\n                        response.push(`${type}-left: ${sizeToPx(x.left)}px;`);\n                    }\n                    if (x.right) {\n                        response.push(`${type}-right: ${sizeToPx(x.right)}px;`);\n                    }\n                    break;\n                }\n                case 'string': {\n                    response.push(`${type}-left: ${sizeToPx(x as Sizes)}px;`);\n                    response.push(`${type}-right: ${sizeToPx(x as Sizes)}px;`);\n                    break;\n                }\n            }\n\n            switch (typeof y) {\n                case 'object': {\n                    if (y.top) {\n                        response.push(`${type}-top: ${sizeToPx(y.top)}px;`);\n                    }\n                    if (y.bottom) {\n                        response.push(`${type}-bottom: ${sizeToPx(y.bottom)}px;`);\n                    }\n                    break;\n                }\n                case 'string': {\n                    response.push(`${type}-top: ${sizeToPx(y as Sizes)}px;`);\n                    response.push(`${type}-bottom: ${sizeToPx(y as Sizes)}px;`);\n                    break;\n                }\n            }\n\n            return response.join('');\n        }\n        case 'string': {\n            return `${type}: ${sizeToPx(size as Sizes)}px;`;\n        }\n    }\n\n    throw new Error('Mixins::Spacing — Wrong type of size. Needs to be an object or string.');\n};\n\nexport default spacing;\n","import { DefaultTheme } from 'styled-components';\n\nexport type Palette = 'primary' | 'secondary' | 'tertiary' | 'dark' | 'light' | 'focus' | 'required';\nexport type Sizes = 'xxl' | 'xl' | 'l' | 'm' | 's' | 'xs' | 'xxs';\n\nconst Thm: DefaultTheme = {\n    bme: {\n        palette: {\n            primary: '#300032',\n            secondary: '#c43235',\n            tertiary: '#0066FF',\n            dark: '#000000',\n            light: '#ffffff',\n            focus: '#f9c642',\n            required: '#cd2026',\n        },\n        fonts: {\n            sansSerif:\n                '\"IBM Plex Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n            serif: '\"IBM Plex Serif\", \"Palatino Linotype\", \"Book Antiqua\", Palatino, serif',\n            mono: '\"IBM Plex Mono\", \"Lucida Console\", Monaco, monospace',\n        },\n        grid: {\n            sizes: {\n                mobile: 4,\n                tablet: 8,\n                desktop: 12,\n            },\n            gap: {\n                mobile: 16,\n                tablet: 24,\n            },\n        },\n    },\n    breakpoints: {\n        xs: 0,\n        sm: 520,\n        md: 720,\n        lg: 840,\n        xl: 1280,\n    },\n};\n\nexport default Thm;\n","import Thm from '../Theme/Theme';\n\nconst textColour = (value: string, theme = Thm): string => {\n    const hex = value.substring(1);\n    const rgb = parseInt(hex, 16);\n\n    const red = (rgb >> 16) & 0xff;\n    const green = (rgb >> 8) & 0xff;\n    const blue = (rgb >> 0) & 0xff;\n\n    const luma = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n\n    return luma < 95 ? theme.bme.palette.light : theme.bme.palette.dark;\n};\n\nexport default textColour;\n","import { AlignXValues, AlignYValues } from '../../Mixins/makeFlex';\n\nexport const WIDTH_HEIGHT_VALUES = {\n    full: '100%',\n    half: '50%',\n    fullPage: '100vh',\n};\n\nexport const VALUE_TO_CSS: { [key in AlignXValues | AlignYValues]: string } = {\n    top: 'flex-start',\n    center: 'center',\n    bottom: 'flex-end',\n    left: 'flex-start',\n    right: 'flex-end',\n    justify: 'space-between',\n};\n","import { VALUE_TO_CSS } from '../Components/Box/Box.variants';\n\nexport type AlignYValues = 'top' | 'center' | 'bottom' | 'justify';\nexport type AlignXValues = 'left' | 'center' | 'right' | 'justify';\nexport type AlignDirectionValues = 'row' | 'column';\n\nconst makeFlex = (direction: AlignDirectionValues, x: AlignXValues, y: AlignYValues): string => {\n    const response = [];\n    response.push(`flex-direction: ${direction};`);\n\n    switch (direction) {\n        case 'column': {\n            response.push(`align-items: ${VALUE_TO_CSS[x]};`);\n            response.push(`justify-content: ${VALUE_TO_CSS[y]};`);\n            break;\n        }\n        default: {\n            response.push(`align-items: ${VALUE_TO_CSS[y]};`);\n            response.push(`justify-content: ${VALUE_TO_CSS[x]};`);\n            break;\n        }\n    }\n\n    return response.join('');\n};\n\nexport default makeFlex;\n","const hexToRGBA = (value: string, opacity = 1): string => {\n    const hex = value.replace(/#/g, '');\n    const rgb = parseInt(hex, 16);\n\n    const red = (rgb >> 16) & 0xff;\n    const green = (rgb >> 8) & 0xff;\n    const blue = (rgb >> 0) & 0xff;\n\n    return `rgba(${red}, ${green}, ${blue}, ${opacity})`;\n};\n\nexport default hexToRGBA;\n","enum TransitionVariantsEnum {\n    standard = 'cubic-bezier(0.4, 0.0, 0.2, 1);',\n    decelerated = 'cubic-bezier(0.0, 0.0, 0.2, 1);',\n    accelerated = 'cubic-bezier(0.4, 0.0, 1, 1);',\n}\n\nconst transition = (\n    property: string[] = ['all'],\n    durationInMs = 750,\n    variant = TransitionVariantsEnum.standard,\n): string =>\n    `\n  transition-property: ${property.join(' ')};\n  transition-duration: ${durationInMs}ms;\n  transition-timing-function: ${TransitionVariantsEnum[variant]};\n  will-change: ${property.join(',')};\n  `;\n\nexport default transition;\n","const clearButtonStyles = (): string => `\n  border: none;\n  border-radius: 0;\n  background: transparent;\n  appearance: none;\n`;\n\nexport default clearButtonStyles;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BoxStyledComponentProps } from './Box.types';\nimport { clearButtonStyles, makeFlex, spacing, textColour } from '../../Mixins';\nimport { WIDTH_HEIGHT_VALUES } from './Box.variants';\n\nconst StyledBox = styled.div<BoxStyledComponentProps>`\n    ${() => clearButtonStyles()}\n\n    position: relative;\n    display: ${({ inline }) => (inline ? 'inline-flex' : 'flex')};\n    ${({ width }) => (WIDTH_HEIGHT_VALUES[width] ? `width: ${WIDTH_HEIGHT_VALUES[width]};` : '')}\n    ${({ height }) => (WIDTH_HEIGHT_VALUES[height] ? `height: ${WIDTH_HEIGHT_VALUES[height]};` : '')}\n    ${({ direction, alignX, alignY }) => (direction || alignX || alignY ? makeFlex(direction, alignX, alignY) : '')}\n    ${({ margin }) => (margin ? spacing('margin', margin) : '')}\n    ${({ padding }) => (padding ? spacing('padding', padding) : '')}\n    ${({ rounded }) => (rounded ? `border-radius: ${rounded === 'full' ? 1000 : 5}px;` : '')}\n    ${({ theme, background }) => (background ? `color: ${textColour(theme.bme.palette[background], theme)};` : '')}\n    ${({ theme, background }) => (background ? `background: ${theme.bme.palette[background]};` : '')}\n    ${({ theme, background }) =>\n        background ? `--bme-colour-text: ${textColour(theme.bme.palette[background], theme)};` : ''}\n`;\n\nconst Box: React.FunctionComponent<BoxStyledComponentProps> = ({ children, ...styledComponentsProperties }) => (\n    <StyledBox {...styledComponentsProperties}>{children}</StyledBox>\n);\n\nexport default Box;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ButtonStyledComponentProps } from './Button.types';\nimport { hexToRGBA, makeFlex, spacing, textColour, transition } from '../../Mixins';\n\nconst StyledButton = styled.button<ButtonStyledComponentProps>`\n    position: relative;\n\n    display: inline-flex;\n    ${makeFlex('row', 'center', 'center')}\n    ${spacing('padding', { x: 'm', y: 's' })}\n  overflow: hidden;\n    cursor: pointer;\n\n    color: ${({ theme, variant, outline }) =>\n        !outline && variant ? `${textColour(theme.bme.palette[variant], theme)}` : 'var(--bme-colour-text)'};\n    background: ${({ theme, variant, outline }) =>\n        !outline && variant ? `${theme.bme.palette[variant]}` : 'transparent'};\n    border: ${({ theme, variant, outline }) =>\n        outline && variant ? `${theme.bme.palette[variant]} 2px solid` : 'none'};\n    border-radius: ${({ rounded }) => (rounded ? 1000 : 5)}px;\n    appearance: none;\n    --webkit-appearance: none;\n\n    ${({ theme, variant, outline }) =>\n        !outline && variant ? `--bme-colour-text: ${textColour(theme.bme.palette[variant], theme)};` : ''};\n\n    &::after,\n    &&::before {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n\n        display: block;\n        width: 1000px;\n        height: 1000px;\n        max-width: 0;\n        max-height: 0;\n        content: '';\n        transform: translate(-50%, -50%);\n\n        border-radius: 1000px;\n        background: ${({ theme }) => hexToRGBA(theme.bme.palette.dark, 0.11)};\n\n        ${transition(['max-width', 'max-height'])};\n    }\n\n    &:hover {\n        &::after {\n            max-width: 1000px;\n            max-height: 1000px;\n        }\n    }\n\n    &:active {\n        &::before {\n            max-width: 1000px;\n            max-height: 1000px;\n        }\n    }\n`;\n\nconst Button: React.FunctionComponent<ButtonStyledComponentProps> = ({ children, ...styledComponentsProperties }) => (\n    <StyledButton {...styledComponentsProperties}>{children}</StyledButton>\n);\n\nexport default Button;\n","import { TextSizes } from '../Text/Text.types';\n\nexport const HeaderFontSize: { [key in TextSizes]: number } = {\n    xxl: 62,\n    xl: 42,\n    l: 32,\n    m: 24,\n    s: 22,\n    xs: 18,\n    xxs: 16,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { HeaderComponentProps } from './Header.types';\nimport { HeaderFontSize } from './Header.variants';\nimport { TextFontWeight } from '../Text/Text.variants';\nimport { spacing } from '../../Mixins';\n\nconst StyledHeader = styled.header<HeaderComponentProps>`\n    width: 100%;\n    font-size: ${({ size }) => HeaderFontSize[size]}px;\n    font-family: ${({ theme, fontFamily }) => theme.bme.fonts[fontFamily]};\n    font-weight: ${TextFontWeight.bold};\n    text-align: ${({ align }) => align};\n`;\n\nconst StyledAccent = styled.span`\n    ${spacing('margin', { x: { right: 'xs' } })}\n    background: ${({ theme }) =>\n        `linear-gradient(45deg, ${theme.bme.palette.primary}, ${theme.bme.palette.secondary}, ${theme.bme.palette.tertiary})`};\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    font-style: italic;\n`;\n\nconst Header: React.FunctionComponent<HeaderComponentProps> = ({ children, ...args }) => (\n    <StyledHeader {...args}>\n        <StyledAccent>#</StyledAccent>\n        {children}\n    </StyledHeader>\n);\n\nHeader.defaultProps = {\n    size: 'm',\n    fontFamily: 'mono',\n    align: 'left',\n};\n\nexport default Header;\n","import { useState, useEffect, useCallback, useRef } from 'react';\n\ntype ROOT = Element | null;\ntype ROOT_MARGIN = string;\ntype THRESHOLDS = number | number[] | undefined;\ntype INTERSECTION_ENTRY = IntersectionObserverEntry;\n\nconst useIntersection = (\n    root: ROOT = null,\n    rootMargin: ROOT_MARGIN = '0px',\n): { isIntersecting: boolean; ref: React.MutableRefObject<HTMLDivElement>; intersectionRatio: number } => {\n    const ref = useRef<HTMLDivElement | null>(null);\n    const [entry, setEntry] = useState<INTERSECTION_ENTRY | null>(null);\n\n    const handleIntersect = useCallback(([event]: INTERSECTION_ENTRY[]) => {\n        setEntry(event);\n    }, []);\n\n    const buildTresholdList = (): THRESHOLDS => {\n        const thresholdList: number[] = [];\n        const numSteps = 20;\n\n        for (let i = 1.0; i <= numSteps; i++) {\n            const ratio = i / numSteps;\n            thresholdList.push(ratio);\n        }\n\n        thresholdList.push(0);\n\n        return thresholdList;\n    };\n\n    const options: IntersectionObserverInit = { root, rootMargin, threshold: buildTresholdList() };\n\n    useEffect(() => {\n        const observer: IntersectionObserver = new IntersectionObserver(handleIntersect, options);\n\n        if (ref && ref.current) {\n            observer.observe(ref.current);\n        }\n\n        return () => {\n            observer.disconnect();\n        };\n    }, [ref, handleIntersect]);\n\n    let isIntersecting = false;\n    let intersectionRatio = NaN;\n\n    if (entry !== null) {\n        if (entry.isIntersecting) {\n            isIntersecting = entry.isIntersecting;\n        }\n\n        if (entry.intersectionRatio) {\n            intersectionRatio = entry.intersectionRatio;\n        }\n    }\n\n    return { isIntersecting, ref, intersectionRatio };\n};\n\nexport default useIntersection;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { ImageComponentProps, ImageComponentStyledFigureProps, ImageComponentStyledImageProps } from './Image.types';\nimport { useIntersection } from '../../Hooks';\nimport { transition } from '../../Mixins';\n\nconst StyledFigure = styled.figure<ImageComponentStyledFigureProps>`\n    position: relative;\n    overflow: hidden;\n\n    ${({ width }) => (width ? `width: ${width};` : '')}\n    ${({ height }) => (height ? `height: ${height};` : '')}\n  margin: 0;\n    padding: 0;\n    background-color: ${({ lazy, loaded }) => (lazy && !loaded ? 'var(--bme-colour-text)' : 'transparent')};\n    opacity: ${({ loaded }) => (loaded ? 1 : 0.33)};\n    ${transition(['opacity', 'background-color'])}\n\n    &:after {\n        position: relative;\n        display: inline-block;\n        padding-bottom: ${({ lazy }) => (lazy ? 100 : 0)}%;\n        content: '';\n        ${transition(['padding-bottom'])}\n    }\n`;\n\nconst StyledImage = styled.img<ImageComponentStyledImageProps>`\n    ${({ fixedSize }) =>\n        fixedSize\n            ? `\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  `\n            : ''}\n    max-width: 100%;\n    height: auto;\n    opacity: ${({ loaded }) => (loaded ? 1 : 0)};\n    ${transition(['opacity'])}\n`;\n\nconst Image: React.FunctionComponent<ImageComponentProps> = ({ source, alt, lazy, width, height }) => {\n    const { ref, intersectionRatio } = useIntersection();\n    const [loading, setLoading] = useState(false);\n    const [loaded, setLoaded] = useState(!lazy);\n\n    useEffect(() => {\n        if (intersectionRatio > 0.5) {\n            setLoading(true);\n        }\n    }, [intersectionRatio]);\n\n    const handleLoaded = () => {\n        setLoaded(true);\n    };\n\n    return (\n        <StyledFigure ref={ref} width={width} height={height} lazy={lazy} loaded={loaded}>\n            <StyledImage\n                fixedSize={Boolean(width && height)}\n                src={loading ? source : ''}\n                alt={alt}\n                onLoad={handleLoaded}\n                loaded={loaded}\n            />\n        </StyledFigure>\n    );\n};\n\nImage.defaultProps = {\n    alt: '',\n};\n\nexport default Image;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BMEBox, BMEImage } from '../../index';\nimport {\n    CardComponentProps,\n    CardStyledComponentProps,\n    CardStyledSubComponentProps,\n    CardSubcomponents,\n    CardThumbnailComponentProps,\n} from './Card.types';\nimport { hexToRGBA } from '../../Mixins';\n\nconst StyledCard = styled(BMEBox)<CardStyledComponentProps>`\n    overflow: hidden;\n    border: ${({ borderColour, theme }) => hexToRGBA(theme.bme.palette[borderColour], 0.33)} 1px solid;\n`;\n\nconst StyledCardHeader = styled(BMEBox)<CardStyledComponentProps>`\n    border-bottom: ${({ borderColour, theme }) => hexToRGBA(theme.bme.palette[borderColour], 0.33)} 1px solid;\n`;\n\nconst StyledCardThumbnail = styled(BMEBox)<CardStyledComponentProps>`\n    border-bottom: ${({ borderColour, theme }) => hexToRGBA(theme.bme.palette[borderColour], 0.33)} 1px solid;\n`;\n\nconst StyledCardBody = styled(BMEBox)<CardStyledComponentProps>`\n    border-bottom: ${({ borderColour, theme }) => hexToRGBA(theme.bme.palette[borderColour], 0.33)} 1px solid;\n`;\n\nconst StyledCardFooter = styled(BMEBox)``;\n\nconst CardHeader: React.FunctionComponent<CardStyledSubComponentProps> = ({ children, borderColour }) => (\n    <StyledCardHeader borderColour={borderColour} direction=\"column\" padding={{ x: 'm', y: 's' }}>\n        {children}\n    </StyledCardHeader>\n);\n\nconst CardThumbnail: React.FunctionComponent<CardThumbnailComponentProps> = ({ borderColour, source, alt }) => (\n    <StyledCardThumbnail borderColour={borderColour}>\n        <BMEImage source={source} alt={alt} width=\"100%\" height=\"350px\" />\n    </StyledCardThumbnail>\n);\n\nconst CardBody: React.FunctionComponent<CardStyledSubComponentProps> = ({ children, borderColour }) => (\n    <StyledCardBody borderColour={borderColour} padding={{ x: 'm', y: 'm' }}>\n        {children}\n    </StyledCardBody>\n);\n\nconst CardFooter: React.FunctionComponent<CardStyledSubComponentProps> = ({ children }) => (\n    <StyledCardFooter padding={{ x: 'm', y: 's' }}>{children}</StyledCardFooter>\n);\n\nconst Card: React.FunctionComponent<CardComponentProps> & CardSubcomponents = ({\n    children,\n    borderColour,\n    background,\n}) => {\n    const childrenWithProps = React.Children.map(children, (child) => {\n        const props = { borderColour };\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, props);\n        }\n        return child;\n    });\n\n    return (\n        <StyledCard width=\"full\" direction=\"column\" rounded borderColour={borderColour} background={background}>\n            {childrenWithProps}\n        </StyledCard>\n    );\n};\n\nCard.defaultProps = {\n    borderColour: 'light',\n};\n\nCard.Header = CardHeader;\nCard.Thumbnail = CardThumbnail;\nCard.Body = CardBody;\nCard.Footer = CardFooter;\n\nexport default Card;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { BadgeComponentProps } from './Badge.types';\nimport { spacing, textColour } from '../../Mixins';\n\nconst StyledBadge = styled.span<BadgeComponentProps>`\n    display: inline-block;\n    ${spacing('padding', { x: 'm', y: 'xs' })}\n    ${spacing('margin', { x: 'xs', y: 'xxs' })}\n  color: ${({ theme, variant, outline }) =>\n        !outline && variant ? `${textColour(theme.bme.palette[variant], theme)}` : 'var(--bme-colour-text)'};\n    background: ${({ theme, variant, outline }) =>\n        !outline && variant ? `${theme.bme.palette[variant]}` : 'transparent'};\n    border: ${({ theme, variant, outline }) =>\n        outline && variant ? `${theme.bme.palette[variant]} 2px solid` : 'none'};\n    border-radius: ${({ rounded }) => (rounded ? 1000 : 5)}px;\n\n    font-family: ${({ theme }) => theme.bme.fonts.mono};\n    font-style: italic;\n`;\n\nconst Badge: React.FunctionComponent<BadgeComponentProps> = ({ children, ...args }) => (\n    <StyledBadge {...args}>{children}</StyledBadge>\n);\n\nBadge.defaultProps = {\n    variant: 'dark',\n};\n\nexport default Badge;\n","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _templateObject = _taggedTemplateLiteral(['@media (', ': ', 'em) {\\n      ', '\\n    }'], ['@media (', ': ', 'em) {\\n      ', '\\n    }']),\n    _templateObject2 = _taggedTemplateLiteral(['@media (min-width: ', 'em) and (max-width: ', 'em) {\\n      ', '\\n    }'], ['@media (min-width: ', 'em) and (max-width: ', 'em) {\\n      ', '\\n    }']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* global process */\nimport { css } from 'styled-components';\n\n// eslint-disable-line no-undef\n\nfunction convertPxToEm(pixels) {\n  // @media is always calculated off 16px regardless of whether the root font size is the default or not\n  return pixels / 16;\n}\n\nfunction getValueFromName(breakpoints, name) {\n  var value = breakpoints[name];\n  if (process.env.NODE_ENV !== 'production' && typeof value === 'undefined') {\n    console.error('A breakpoint named \"' + name + '\" does not exist.'); // eslint-disable-line no-console\n    return 0;\n  }\n  return value;\n}\n\nfunction withSingleCriteria(breakpoints, name, operator) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  var value = getValueFromName(breakpoints, name);\n\n  // special case for 0 to avoid wrapping styles in an unnecessary @media block\n  // FIXME: typings\n  // if (operator === 'max-width' && value === 0) {\n  //   return () => '';\n  // }\n\n  // special case for 0 to avoid wrapping styles in an unnecessary @media block\n  if (operator === 'min-width' && value === 0) {\n    return function (strings) {\n      for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        interpolations[_key - 1] = arguments[_key];\n      }\n\n      return css.apply(undefined, [strings].concat(_toConsumableArray(interpolations)));\n    };\n  }\n\n  return function (strings) {\n    for (var _len2 = arguments.length, interpolations = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      interpolations[_key2 - 1] = arguments[_key2];\n    }\n\n    return css(_templateObject, operator, convertPxToEm(value + offset), css.apply(undefined, [strings].concat(_toConsumableArray(interpolations))));\n  };\n}\n\nexport function _gt(breakpoints, name) {\n  return withSingleCriteria(breakpoints, name, 'min-width', +1);\n}\n\nexport function _gte(breakpoints, name) {\n  return withSingleCriteria(breakpoints, name, 'min-width');\n}\n\nexport function _lt(breakpoints, name) {\n  return withSingleCriteria(breakpoints, name, 'max-width', -1);\n}\n\nexport function _lte(breakpoints, name) {\n  return withSingleCriteria(breakpoints, name, 'max-width');\n}\n\nexport function _between(breakpoints, gte, lt) {\n  var gteValue = getValueFromName(breakpoints, gte);\n  var ltValue = getValueFromName(breakpoints, lt);\n  return function (strings) {\n    for (var _len3 = arguments.length, interpolations = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      interpolations[_key3 - 1] = arguments[_key3];\n    }\n\n    return css(_templateObject2, convertPxToEm(gteValue), convertPxToEm(ltValue - 1), css.apply(undefined, [strings].concat(_toConsumableArray(interpolations))));\n  };\n}\n\nexport function _breakpoint(breakpoints, gte, lt) {\n  if (typeof lt === 'undefined') {\n    return _gte(breakpoints, gte);\n  } else {\n    return _between(breakpoints, gte, lt);\n  }\n};\n\n// TODO: allow the operator to be customised\nexport function _map(breakpoints, value, mapValueToCSS) {\n  var values = value;\n\n  if (values === null || (typeof values === 'undefined' ? 'undefined' : _typeof(values)) !== 'object') {\n    return mapValueToCSS(values);\n  }\n\n  return [\n  // eslint-disable-next-line no-undefined\n  mapValueToCSS(undefined)].concat(_toConsumableArray(Object.keys(values).map(function (name) {\n    var tag = _gte(breakpoints, name);\n    var val = values[name];\n    var styles = tag([], [].concat(mapValueToCSS(val)));\n    return styles;\n  })));\n};","function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport { _breakpoint, _map } from './core';\n\nvar defaultBreakpoints = {\n  mobile: 0, // targeting all devices\n  tablet: 737, // targeting devices that are LARGER than the iPhone 6 Plus (which is 736px in landscape mode)\n  desktop: 1025 // targeting devices that are LARGER than the iPad (which is 1024px in landscape mode)\n};\n\nfunction breakpoint(gte, lt) {\n  return function (strings) {\n    for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      interpolations[_key - 1] = arguments[_key];\n    }\n\n    return function (_ref) {\n      var _ref$theme = _ref.theme,\n          theme = _ref$theme === undefined ? {} : _ref$theme;\n\n      return _breakpoint(theme.breakpoints || defaultBreakpoints, gte, lt).apply(undefined, [strings].concat(_toConsumableArray(interpolations)));\n    };\n  };\n}\n\nexport function map(value, mapValueToCSS) {\n  return function (_ref2) {\n    var _ref2$theme = _ref2.theme,\n        theme = _ref2$theme === undefined ? {} : _ref2$theme;\n\n    return _map(theme.breakpoints || defaultBreakpoints, value, mapValueToCSS);\n  };\n}\n\nexport function createStatic() {\n  var breakpoints = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultBreakpoints;\n\n  return Object.keys(breakpoints).reduce(function (accum, name) {\n    accum[name] = _breakpoint(breakpoints, name);\n    return accum;\n  }, {\n    breakpoint: function breakpoint(gte, lt) {\n      return _breakpoint(breakpoints, gte, lt);\n    },\n    map: function map(value, mapValueToCSS) {\n      return _map(breakpoints, value, mapValueToCSS);\n    }\n  });\n}\n\nexport default breakpoint;","var _templateObject = _taggedTemplateLiteral(['\\n    display: flex;\\n    ', '\\n    ', '\\n    ', '\\n    ', '\\n  '], ['\\n    display: flex;\\n    ', '\\n    ', '\\n    ', '\\n    ', '\\n  ']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/* eslint-disable no-shadow */\nimport { css } from 'styled-components';\nimport { map } from 'styled-components-breakpoint';\nimport '../types';\n\nfunction halign(_ref) {\n  var halign = _ref.halign,\n      reverse = _ref.reverse;\n\n  //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n  if (typeof halign === 'undefined' && typeof reverse === 'undefined') {\n    return '';\n  }\n\n  return map(halign, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'left';\n\n    var rule = '';\n    switch (value) {\n      case 'left':\n        if (reverse) {\n          rule = 'flex-end';\n        } else {\n          rule = 'flex-start';\n        }\n        break;\n\n      case 'right':\n        if (reverse) {\n          rule = 'flex-start';\n        } else {\n          rule = 'flex-end';\n        }\n        break;\n\n      case 'center':\n        rule = 'center';\n        break;\n\n      case 'justify-center':\n        rule = 'space-around';\n        break;\n\n      case 'justify':\n        rule = 'space-between';\n        break;\n\n      default:\n        throw new Error('styled-components-grid: halign must be one of \"left\", \"right\", \"center\", \"justify-center\" or \"justify\". Got \"' + String(value) + '\"');\n    }\n    return 'justify-content: ' + rule + ';';\n  });\n}\n\nfunction valign(_ref2) {\n  var valign = _ref2.valign;\n\n  //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n  if (typeof valign === 'undefined') {\n    return '';\n  }\n\n  return map(valign, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'stretch';\n\n    var rule = '';\n    switch (value) {\n      case 'top':\n        rule = 'flex-start';\n        break;\n\n      case 'bottom':\n        rule = 'flex-end';\n        break;\n\n      case 'center':\n        rule = 'center';\n        break;\n\n      case 'stretch':\n        rule = 'stretch';\n        break;\n\n      default:\n        throw new Error('styled-components-grid: valign must be one of \"top\", \"bottom\", \"center\" or \"stretch\". Got \"' + String(value) + '\".');\n    }\n    return 'align-items: ' + rule + ';';\n  });\n}\n\nfunction reverse(_ref3) {\n  var reverse = _ref3.reverse;\n\n  //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n  if (typeof reverse === 'undefined') {\n    return '';\n  }\n\n  return map(reverse, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return 'flex-direction: ' + (value && 'row-reverse' || 'row') + ';';\n  });\n}\n\nfunction wrap(_ref4) {\n  var wrap = _ref4.wrap,\n      reverse = _ref4.reverse;\n\n  return map(wrap, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (value && reverse) {\n      return 'flex-wrap: wrap-reverse;';\n    } else if (value === false) {\n      return 'flex-wrap: nowrap;';\n    } else {\n      return 'flex-wrap: wrap;';\n    }\n  });\n}\n\nexport default function (props) {\n  return css(_templateObject, halign(props), valign(props), reverse(props), wrap(props));\n}","var _templateObject = _taggedTemplateLiteral(['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  '], ['\\n    box-sizing: border-box;\\n    ', ' ', ';\\n  ']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n/* eslint-disable no-shadow */\nimport { css } from 'styled-components';\nimport { map } from 'styled-components-breakpoint';\nimport '../types';\n\nfunction size(_ref) {\n  var size = _ref.size;\n\n  return map(size, function () {\n    var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n    switch (value) {\n      case 'min':\n        return '\\n          flex-grow: 0;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n        ';\n\n      case 'max':\n        return '\\n          flex-grow: 1;\\n          flex-basis: auto;\\n          width: auto;\\n          max-width: none;\\n          max-width: 100%; /* TODO: does this always work as expected? */\\n        ';\n\n      default:\n        {\n          var pct = Math.round((typeof value === 'number' ? value : 1) * 100 * 10000) / 10000; //round to 4 decimal places\n          return '\\n          flex-basis: ' + pct + '%;\\n          max-width: ' + pct + '%;\\n        ';\n        }\n    }\n  });\n}\n\nfunction visible(_ref2) {\n  var visible = _ref2.visible;\n\n  //if no value is specified, then don't output any css (it just makes it harder for the consumer to override)\n  if (typeof visible === 'undefined') {\n    return '';\n  }\n\n  return map(visible, function (value) {\n    if (value === false) {\n      return 'display: none;';\n    } else {\n      return 'display: flex;'; /* TODO: does this always work as expected? */\n    }\n  });\n}\n\nexport default function (props) {\n  return css(_templateObject, size(props), visible(props));\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction omitKeys(keys, object) {\n  return Object.keys(object).reduce(function (cleanObject, key) {\n    if (keys.includes(key)) {\n      return cleanObject;\n    } else {\n      return _extends({}, cleanObject, _defineProperty({}, key, object[key]));\n    }\n  }, {});\n}\n\nexports.default = function () {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$tag = _ref.tag,\n      defaultTag = _ref$tag === undefined ? 'div' : _ref$tag,\n      _ref$prop = _ref.prop,\n      prop = _ref$prop === undefined ? 'tag' : _ref$prop,\n      _ref$propsToOmit = _ref.propsToOmit,\n      propsToOmit = _ref$propsToOmit === undefined ? [] : _ref$propsToOmit;\n\n  return function (_ref2) {\n    var children = _ref2.children,\n        otherProps = _objectWithoutProperties(_ref2, ['children']);\n\n    var tag = otherProps[prop] || defaultTag;\n    var omitPropsKeys = [prop].concat(_toConsumableArray(propsToOmit));\n    var props = omitKeys(omitPropsKeys, otherProps);\n    return _react2.default.createElement(tag, props, children);\n  };\n};","var _templateObject = _taggedTemplateLiteral(['\\n  box-sizing: border-box;\\n  ', '\\n'], ['\\n  box-sizing: border-box;\\n  ', '\\n']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport createComponentFromTagProp from 'react-create-component-from-tag-prop';\nimport '../types';\nimport gridUnit from '../mixins/gridUnit';\n\nvar GridUnitComponent = createComponentFromTagProp({\n  tag: 'div',\n  prop: 'component',\n  propsToOmit: ['width', 'visible']\n});\n\nvar GridUnit = styled(GridUnitComponent)(_templateObject, gridUnit);\n\nexport default GridUnit;","var _templateObject = _taggedTemplateLiteral(['\\n  display: flex;\\n  ', '\\n'], ['\\n  display: flex;\\n  ', '\\n']);\n\nfunction _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport createComponentFromTagProp from 'react-create-component-from-tag-prop';\nimport '../types';\nimport grid from '../mixins/grid';\nimport GridUnit from './GridUnit';\n\nvar GridComponent = createComponentFromTagProp({\n  tag: 'div',\n  prop: 'component',\n  propsToOmit: ['halign', 'valign', 'reverse', 'wrap']\n});\n\nvar Grid = styled(GridComponent)(_templateObject, grid);\n\nexport default Grid;","import grid from './mixins/grid';\nimport gridUnit from './mixins/gridUnit';\nimport Grid from './components/Grid';\nimport GridUnit from './components/GridUnit';\n\ngrid.unit = gridUnit;\nGrid.Unit = GridUnit;\n\nexport { grid };\nexport default Grid;","import React from 'react';\nimport styled, { useTheme } from 'styled-components';\nimport { default as SCGrid } from 'styled-components-grid';\n\nimport { GridColComponentProps, GridComponentProps, GridSubcomponents } from './Grid.types';\nimport { WIDTH_HEIGHT_VALUES } from '../Box/Box.variants';\nimport { makeFlex, spacing } from '../../Mixins';\n\nconst StyledGrid = styled(SCGrid)<GridComponentProps>`\n    width: ${({ width }) => WIDTH_HEIGHT_VALUES[width] || '100%'};\n`;\n\nconst StyledCol = styled(SCGrid.Unit)`\n    display: flex;\n    ${({ direction, alignX, alignY }) => (direction || alignX || alignY ? makeFlex(direction, alignX, alignY) : '')}\n    padding: ${({ theme }) => theme.bme.grid.gap.mobile / 2}px;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n        padding: ${({ theme }) => theme.bme.grid.gap.tablet / 2}px;\n    }\n`;\n\nconst GridCol: React.FunctionComponent<GridColComponentProps> = ({ children, mobile, tablet, desktop, ...props }) => {\n    const {\n        bme: {\n            grid: { sizes },\n        },\n    } = useTheme();\n\n    const size = {\n        xs: mobile / sizes.mobile,\n        md: tablet / sizes.tablet,\n        xl: desktop / sizes.desktop,\n    };\n\n    return (\n        <StyledCol size={size} {...props}>\n            {children}\n        </StyledCol>\n    );\n};\n\nconst StyledContainer = styled.div`\n    width: 100%;\n    ${spacing('padding', { x: 'm' })}\n    margin: 0 auto;\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.xl}px) {\n        max-width: 1180px;\n    }\n`;\n\nconst GridContainer: React.FunctionComponent = ({ children }) => <StyledContainer>{children}</StyledContainer>;\n\nconst Grid: React.FunctionComponent<GridComponentProps> & GridSubcomponents = ({ children, ...args }) => (\n    <StyledGrid {...args}>{children}</StyledGrid>\n);\n\nGrid.Col = GridCol;\nGrid.Container = GridContainer;\n\nexport default Grid;\n","import React from 'react';\nimport { BMEBox, BMEGrid } from '../../index';\n\nconst TopbarBrand: React.FunctionComponent = ({ children }) => (\n    <BMEGrid.Col mobile={1} tablet={1} desktop={2} alignY=\"center\">\n        <BMEBox alignY=\"center\">{children}</BMEBox>\n    </BMEGrid.Col>\n);\n\nexport default TopbarBrand;\n","import React from 'react';\nimport { BMEBox, BMEGrid } from '../../index';\n\nconst TopbarContent: React.FunctionComponent = ({ children }) => (\n    <BMEGrid.Col mobile={3} tablet={7} desktop={10} alignY=\"center\">\n        <BMEBox alignX=\"right\" alignY=\"center\" width=\"full\" height=\"full\">\n            {children}\n        </BMEBox>\n    </BMEGrid.Col>\n);\n\nexport default TopbarContent;\n","import styled from 'styled-components';\nimport { TopbarStyledComponentProps } from './Topbar.types';\nimport { makeFlex, textColour } from '../../Mixins';\nimport { Palette } from '../../Theme/Theme';\n\nexport const StyledTopbar = styled.header<TopbarStyledComponentProps>`\n    position: ${({ fixed }) => (fixed ? 'fixed' : 'relative')};\n    top: 0;\n    left: 0;\n\n    display: flex;\n    ${makeFlex('row', 'center', 'center')}\n    width: 100%;\n    ${({ theme, variant }) => (variant ? `color: ${textColour(theme.bme.palette[variant] as Palette, theme)};` : '')}\n    ${({ theme, variant }) => (variant ? `background: ${theme.bme.palette[variant]};` : '')}\n  ${({ theme, variant }) =>\n        variant ? `--bme-colour-text: ${textColour(theme.bme.palette[variant as Palette], theme)};` : ''}\n`;\n","import React from 'react';\nimport TopbarBrand from './Topbar.Brand';\nimport TopbarContent from './Topbar.Content';\nimport { StyledTopbar } from './Topbar.styled';\nimport { TopbarStyledComponentProps, TopSubcomponents } from './Topbar.types';\nimport { BMEGrid } from '../../index';\n\nconst Topbar: React.FunctionComponent<TopbarStyledComponentProps> & TopSubcomponents = ({ children, ...args }) => (\n    <StyledTopbar {...args}>\n        <BMEGrid.Container>\n            <BMEGrid>{children}</BMEGrid>\n        </BMEGrid.Container>\n    </StyledTopbar>\n);\n\nTopbar.Brand = TopbarBrand;\nTopbar.Content = TopbarContent;\n\nexport default Topbar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BMEBox, BMEText } from '../../index';\nimport { NavComponentProps, NavItemComponentProps, NavSubcomponents } from './Nav.types';\nimport { spacing, transition } from '../../Mixins';\n\nconst StyledNavWrapper = styled.div`\n    display: block;\n    width: 100%;\n    max-width: 80vw;\n    overflow-x: scroll;\n`;\n\nconst StyledNav = styled(BMEBox)`\n    min-width: max-content;\n    white-space: nowrap;\n`;\n\nconst StyledText = styled(BMEText)<NavItemComponentProps>`\n    cursor: pointer;\n    opacity: ${({ active }) => (active ? '1' : '.66')};\n    ${transition(['opacity'], 350)}\n\n    &:active, &:hover {\n        opacity: 1;\n    }\n`;\n\nconst StyledAccent = styled.span<NavItemComponentProps>`\n    ${spacing('margin', { x: { right: 'xxs' } })}\n    background: ${({ active, theme }) =>\n        active\n            ? `linear-gradient(45deg, ${theme.bme.palette.primary}, ${theme.bme.palette.secondary}, ${theme.bme.palette.tertiary})`\n            : 'var(--bme-colour-texts)'};\n    ${({ active }) => (active ? '-webkit-background-clip: text;' : '')}\n    ${({ active }) => (active ? '-webkit-text-fill-color: transparent;' : '')}\n  opacity: ${({ active }) => (!active ? '0.82' : '1')};\n    ${transition(['opacity'], 350)}\n    font-style: italic;\n`;\n\nconst NavItem: React.FunctionComponent<NavItemComponentProps> = ({ children, active }) => (\n    <BMEBox padding={{ x: 's' }} as=\"button\">\n        <StyledText fontFamily=\"mono\" italic active={active}>\n            <StyledAccent active={active}>#</StyledAccent>\n            {children}\n        </StyledText>\n    </BMEBox>\n);\n\nconst Nav: React.FunctionComponent<NavComponentProps> & NavSubcomponents = ({ children, alignX }) => (\n    <StyledNavWrapper>\n        <StyledNav width=\"full\" alignX={alignX} margin={{ y: 'm' }}>\n            {children}\n        </StyledNav>\n    </StyledNavWrapper>\n);\n\nNav.defaultProps = {\n    alignX: 'justify',\n};\n\nNav.Item = NavItem;\n\nexport default Nav;\n","import styled from 'styled-components';\nimport { TextFontSize } from '../../Text/Text.variants';\nimport { sizeToPx } from '../../../Utils';\nimport { hexToRGBA, spacing, transition } from '../../../Mixins';\n\nexport const StyledLabel = styled.label<{ for?: string; filled?: boolean }>`\n    position: absolute;\n    top: ${({ filled }) => (filled ? `${TextFontSize.s}px` : '50%')};\n    left: ${sizeToPx('m')}px;\n    transform: translateY(-50%);\n    ${transition(['top', 'font-size'], 350)}\n`;\n\nexport const StyledInput = styled.input`\n    width: 100%;\n    ${spacing('padding', { x: 'm', y: { top: 'l', bottom: 's' } })}\n    color: var(--bme-colour-text);\n    background: ${({ theme }) => hexToRGBA(theme.bme.palette.dark, 0)};\n    border-radius: 5px;\n    border: var(--bme-colour-text) 1px solid;\n\n    font-size: ${TextFontSize.m}px;\n\n    appearance: none;\n    ${transition(['background'], 350)}\n\n    &:hover, &:active {\n        background: ${({ theme }) => hexToRGBA(theme.bme.palette.dark, 0.13)};\n    }\n\n    &:focus {\n        border-color: ${({ theme }) => theme.bme.palette.focus};\n        outline: none;\n    }\n`;\n","import React, { useState } from 'react';\nimport { BMEBox, BMEText } from '../../../index';\nimport { TextFieldComponentProps } from './TextField.types';\nimport { StyledInput, StyledLabel } from './TextField.styled';\nimport { isEmpty, renderLabel } from '../../../Utils';\n\nconst TextField: React.FunctionComponent<TextFieldComponentProps> = ({ name, value, label, onChange, required }) => {\n    const [filled, setFilled] = useState(!isEmpty(value));\n\n    const handleChange = ({ target: { value: targetValue } }: React.ChangeEvent<HTMLInputElement>) => {\n        setFilled(!isEmpty(targetValue));\n        onChange(targetValue);\n    };\n\n    const handleFocus = () => {\n        setFilled(true);\n    };\n\n    const handleBlur = ({ target: { value: targetValue } }: React.ChangeEvent<HTMLInputElement>) => {\n        setFilled(!isEmpty(targetValue));\n    };\n\n    return (\n        <BMEBox width=\"full\">\n            <StyledLabel for={name} filled={filled}>\n                <BMEText size={filled ? 'xxs' : 'm'}>{renderLabel(label, required)}</BMEText>\n            </StyledLabel>\n            <StyledInput\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n            />\n        </BMEBox>\n    );\n};\n\nexport default TextField;\n","import styled from 'styled-components';\nimport { hexToRGBA, spacing, transition } from '../../../Mixins';\nimport { TextFontSize } from '../../Text/Text.variants';\n\nexport const StyledSelect = styled.select`\n    width: 100%;\n    ${spacing('padding', { x: 'm', y: { top: 'm', bottom: 'm' } })}\n    color: var(--bme-colour-text);\n    background: ${({ theme }) => hexToRGBA(theme.bme.palette.dark, 0)};\n    border-radius: 5px;\n    border: var(--bme-colour-text) 1px solid;\n\n    font-size: ${TextFontSize.m}px;\n\n    appearance: none;\n    ${transition(['background'], 350)}\n\n    &:hover, &:active {\n        background: ${({ theme }) => hexToRGBA(theme.bme.palette.dark, 0.13)};\n    }\n\n    &:focus {\n        border-color: ${({ theme }) => theme.bme.palette.focus};\n        outline: none;\n    }\n`;\n","import React from 'react';\nimport { SelectComponentProps } from './Select.types';\nimport { StyledSelect } from './Select.styled';\nimport { renderLabel } from '../../../Utils';\n\nconst Select: React.FunctionComponent<SelectComponentProps> = ({ name, options, value, label, onChange, required }) => {\n    const handleChange = ({ target: { value: targetValue } }: React.ChangeEvent<HTMLSelectElement>) => {\n        onChange(targetValue);\n    };\n\n    return (\n        <StyledSelect as=\"select\" id={name} name={name} value={value} onChange={handleChange}>\n            <option value=\"null\" selected>\n                {renderLabel(label, required)}\n            </option>\n            {options.map(({ value: optionValue, content }) => (\n                <option key={optionValue} value={optionValue} selected={false}>\n                    {content}\n                </option>\n            ))}\n        </StyledSelect>\n    );\n};\n\nexport default Select;\n","import styled from 'styled-components';\n\nexport const StyledSwitch = styled.input<{ required?: boolean }>`\n    display: none;\n    visibility: hidden;\n    appearance: none;\n`;\n\nexport const StyledLabel = styled.label`\n    width: 100%;\n`;\n","import React, { useState } from 'react';\nimport { BMEBox, BMESwitch, BMEText } from '../../../index';\nimport { SwitchComponentProps } from './Switch.types';\nimport { StyledLabel, StyledSwitch } from './Switch.styled';\nimport { renderLabel } from '../../../Utils';\n\nconst Switch: React.FunctionComponent<SwitchComponentProps> = ({ name, value, label, onChange, required, variant }) => {\n    const [stateValueHasChanged, setStateValueHasChanged] = useState(false);\n\n    const handleChange = ({ target: { checked } }: React.ChangeEvent<HTMLInputElement>) => {\n        setStateValueHasChanged(true);\n        onChange(checked);\n    };\n\n    return (\n        <BMEBox width=\"full\" padding={{ x: 'm' }}>\n            <StyledLabel htmlFor={name}>\n                <BMEBox width=\"full\" alignX=\"justify\">\n                    <BMEText>{renderLabel(label, required)}</BMEText>\n                    <BMESwitch checked={value} variant={variant} />\n                </BMEBox>\n            </StyledLabel>\n            <StyledSwitch\n                type=\"checkbox\"\n                id={name}\n                name={name}\n                checked={value}\n                onChange={handleChange}\n                required={stateValueHasChanged ? required : false}\n            />\n        </BMEBox>\n    );\n};\n\nSwitch.defaultProps = {\n    variant: 'primary',\n};\n\nexport default Switch;\n","import React, { useState } from 'react';\nimport { BMEBox, BMEText } from '../../../index';\nimport { LabelCharacterLimitComponentProps, LabelComponentProps } from './Label.types';\nimport { isRealNumber } from '../../../Utils';\n\nconst CharacterLimit: React.FunctionComponent<LabelCharacterLimitComponentProps> = ({ characters, maxLimit }) =>\n    isRealNumber(characters) && maxLimit ? (\n        <BMEText size=\"xxs\">\n            {characters} / {maxLimit}\n        </BMEText>\n    ) : null;\n\nconst Label: React.FunctionComponent<LabelComponentProps> = ({\n    helperText,\n    errorText,\n    valid,\n    children,\n    ...characterLimitProps\n}) => {\n    const [stateValid] = useState(valid || true);\n\n    return (\n        <BMEBox width=\"full\" direction=\"column\">\n            <BMEBox width=\"full\">{children}</BMEBox>\n            <BMEBox width=\"full\" alignX=\"justify\" padding={{ y: 's', x: 'm' }}>\n                <BMEText size=\"xxs\" variant={!stateValid ? 'required' : null}>\n                    {!stateValid ? errorText : helperText}\n                </BMEText>\n                <CharacterLimit {...characterLimitProps}></CharacterLimit>\n            </BMEBox>\n        </BMEBox>\n    );\n};\n\nLabel.defaultProps = {\n    helperText: '&nbsp;',\n    errorText: '&nbsp;',\n};\n\nexport default Label;\n","import React from 'react';\nimport { FormSubcomponents } from './Form.types';\nimport TextField from './TextField/TextField';\nimport Select from './Select/Select';\nimport Switch from './Switch/Switch';\nimport Label from './Label/Label';\n\nconst Form: React.FunctionComponent & FormSubcomponents = ({ children }) => <>{children}</>;\n\nForm.TextField = TextField;\nForm.Select = Select;\nForm.Switch = Switch;\nForm.Label = Label;\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BMEBox } from '../../index';\nimport {\n    ListComponentProps,\n    ListStyledComponentProps,\n    ListStyledSubComponentProps,\n    ListSubcomponents,\n} from './List.types';\nimport { hexToRGBA } from '../../Mixins';\n\nconst StyledList = styled(BMEBox)<ListStyledComponentProps>`\n    overflow: hidden;\n    border: ${({ borderColour, theme }) => hexToRGBA(theme.bme.palette[borderColour], 0.33)} 1px solid;\n`;\n\nconst StyledListItem = styled(BMEBox)<ListStyledComponentProps>`\n    border-bottom: ${({ borderColour, theme }) => hexToRGBA(theme.bme.palette[borderColour], 0.33)} 1px solid;\n`;\n\nconst ListItem: React.FunctionComponent<ListStyledSubComponentProps> = ({ children, borderColour }) => (\n    <StyledListItem borderColour={borderColour} direction=\"column\" padding={{ x: 'm', y: 's' }}>\n        {children}\n    </StyledListItem>\n);\n\nconst List: React.FunctionComponent<ListComponentProps> & ListSubcomponents = ({\n    children,\n    borderColour,\n    background,\n}) => {\n    const childrenWithProps = React.Children.map(children, (child) => {\n        const props = { borderColour };\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, props);\n        }\n        return child;\n    });\n\n    return (\n        <StyledList width=\"full\" direction=\"column\" rounded borderColour={borderColour} background={background}>\n            {childrenWithProps}\n        </StyledList>\n    );\n};\n\nList.defaultProps = {\n    borderColour: 'light',\n};\n\nList.Item = ListItem;\n\nexport default List;\n","import styled from 'styled-components';\nimport { makeFlex, textColour, transition } from '../../Mixins';\nimport { sizeToPx } from '../../Utils';\nimport { Palette } from '../../Theme/Theme';\n\nexport const StyledCustomSwitch = styled.div<{ checked: boolean; variant: Palette }>`\n    display: flex;\n    ${makeFlex('row', 'center', 'center')}\n    width: ${sizeToPx('l') * 2}px;\n    height: ${sizeToPx('l')}px;\n    border: solid 1px ${({ variant, theme }) => theme.bme.palette[variant]};\n    background: ${({ checked, variant, theme }) => (checked ? theme.bme.palette[variant] : 'transparent')};\n    border-radius: 1000px;\n    ${transition(['background'])};\n    cursor: pointer;\n`;\n\nexport const StyledCustomSwitchIndicator = styled.div<{ checked: boolean; variant: Palette }>`\n    display: inline-block;\n    width: ${sizeToPx('m')}px;\n    height: ${sizeToPx('m')}px;\n    margin: ${({ checked }) => (checked ? `0 0 0 ${sizeToPx('m')}px` : `0 ${sizeToPx('m')}px 0 0`)};\n    border-radius: 1000px;\n    background: ${({ checked, variant, theme }) =>\n        checked ? textColour(theme.bme.palette[variant], theme) : theme.bme.palette[variant]};\n    ${transition(['margin', 'background'])};\n`;\n","import React from 'react';\nimport { SwitchComponentProps } from './Switch.types';\nimport { StyledCustomSwitch, StyledCustomSwitchIndicator } from './Switch.styled';\n\nconst Switch: React.FunctionComponent<SwitchComponentProps> = ({ checked, variant, onClick }) => {\n    const handleClick = () => {\n        onClick(!checked);\n    };\n\n    return (\n        <StyledCustomSwitch checked={checked} variant={variant} onClick={handleClick}>\n            <StyledCustomSwitchIndicator checked={checked} variant={variant} />\n        </StyledCustomSwitch>\n    );\n};\nSwitch.defaultProps = {\n    checked: false,\n    variant: 'primary',\n};\n\nexport default Switch;\n","export default \"data:application/vnd.ms-fontobject;base64,\"","export default \"data:font/woff;base64,\"","export default \"data:font/woff2;base64,\"","import styled, { createGlobalStyle } from 'styled-components';\n\nimport BmeIconsEot from './bme-icons.eot';\nimport BmeIconsWoff from './bme-icons.woff';\nimport BmeIconsWoff2 from './bme-icons.woff2';\nimport { Palette } from '../../Theme/Theme';\n\nexport const GlobalIcon = createGlobalStyle`\n  @font-face {\n    font-family: \"bme-icons\";\n    src: url(${BmeIconsEot}) format(\"embedded-opentype\"),\nurl(${BmeIconsWoff2}) format(\"woff2\"),\nurl(${BmeIconsWoff}) format(\"woff\");\n}\n`;\n\nexport const StyledIcon = styled.i<{ icon: string | number; variant?: Palette }>`\n    font-family: bme-icons !important;\n    font-style: normal;\n    font-weight: normal !important;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: ${({ theme, variant }) =>\n        variant ? `var(--icon-color, ${theme.bme.palette[variant]})` : 'var(--icon-color)'};\n\n    &:before {\n        content: '\\\\f${({ icon }) => icon}';\n    }\n`;\n","import React from 'react';\nimport { StyledIcon } from './Icon.styled';\nimport { IconComponentProps } from './Icon.types';\n\nconst Icon: React.FunctionComponent<IconComponentProps> = ({ icon, variant }) => (\n    <StyledIcon icon={icon} variant={variant} />\n);\n\nexport default Icon;\n"],"names":["__makeTemplateObject","this","BMEBox","BMEImage","_templateObject","_taggedTemplateLiteral","_react","SCGrid","Grid","BMEGrid","StyledText","BMEText","StyledAccent","StyledLabel","BMESwitch","Switch"],"mappings":"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"}